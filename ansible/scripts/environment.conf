# Set to 1 to encrypt all keys, secrets and passwords with a symmetric key using keyszar.
# Requires python keyszar to be installed (https://github.com/google/keyczar)
# Set to 0 to write keys, secrets and passwords in plaintext.
USE_KEYSZAR=0

# Name of the keystore dir in the environment
KEYSTORE_DIR="metadata-ansible-keystore"

# Length of generated passwords in characters
PASSWORD_LENGTH=15
# List of passwords to generate. Specify the filename of the password file to create. Passwords are
# stored in the "password" directory
PASSWORDS=(
)

# Length of generated secrets in characters
SECRET_LENGTH=40
# List of secrets to generate. Specify the filename of the secret file to create. Secrets are
# stored in the "secret" directory
SECRETS=(
)

SAML_O="Development VM"

# List of self signed certificates to generate. Format: "<basename>:<DN>"
# Where:
# - <filename> is the basename used for the certificate an key on disk
# - <DN> is the distinguised name of the certificate in OpenSSL format
SAML_CERTS=(
)

SSL_DOMAIN='example.com' # Domain for SSL certs
SSL_O='Development VM' # Organisation for SSL certs
SSL_C='FR' # Country for SSL certs

# Distinguised name of the Root CA certificate for issuing the SSL certificates
SSL_ROOT_DN="/CN=Root CA/O=${SSL_O}/C=${SSL_C}" # DN for SSL root CA

# List of SSL/TLS certificates to generate. Format: "<basename>:<DN>"
# Where:
# - <filename> is the basename used for the certificate an key on disk
# - <DN> is the subject distinguished name of the certificate in OpenSSL format
SSL_CERTS=(
  "registry:/CN=registry.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
  "publish:/CN=publish.${SSL_DOMAIN}/O=${SSL_O}/C=${SSL_C}"
)